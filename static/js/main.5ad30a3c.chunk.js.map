{"version":3,"sources":["navigation/Navigation.js","database/db.js","database/TasksDAO.js","tasks/TodaysTasks.js","tasks/TomorrowsTasks.js","about/About.js","tasks/History.js","App.js","index.js"],"names":["Navigation","hideNavbar","page","document","getElementById","classList","contains","click","className","to","onClick","this","id","type","Component","db","Dexie","version","stores","tasks","TasksDao","toArray","task","add","put","delete","today","Date","startToday","getFullYear","getMonth","getDate","endToday","where","between","startTomorrow","endTomorrow","below","reverse","oneWeekAgo","clear","TodaysTasks","props","setButton","querySelectorAll","forEach","btn","remove","btnHere","loadTodaysTasks","getInstance","getTodaysTasks","then","result","setState","todaysTasks","newTaskNameChange","event","newTaskName","target","value","newTaskDescChage","newTaskDesc","searchChange","search","addNewTask","validTask","name","state","desc","date","completed","insert","editTask","taskToUpdate","update","deleteTask","toggleTaskCompletion","moveTaskToTomorrow","now","insertingTask","content","placeholder","onChange","tabIndex","htmlFor","map","toLowerCase","style","opacity","TomorrowsTasks","loadTomorrowsTasks","getTomorrowsTasks","tomorrowsTasks","tomorrow","moveTaskToToday","About","href","rel","History","loadOldTasks","getOldTasks","oldTasks","scope","toDateString","App","exact","path","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.5ad30a3c.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default class Navigation extends Component {\r\n\r\n    hideNavbar = (page) => {\r\n        if(document.getElementById(\"navbarSupportedContent\").classList.contains(\"show\"))\r\n            document.getElementById(\"navbarTogglerButton\").click();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark fixed-top p-1 p-sm-0\">\r\n                <div className=\"container-fluid\">\r\n                    <Link className=\"navbar-brand\" to=\"/\" onClick={this.hideNavbar}>Next Day Planner</Link>\r\n                    <button className=\"navbar-toggler\" id=\"navbarTogglerButton\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className=\"navbar-collapse collapse\" id=\"navbarSupportedContent\">\r\n                        <ul className=\"navbar-nav m-3 gap-2\">\r\n                            <li className=\"nav-item\">\r\n                                <Link to=\"/\" className=\"nav-link link-button text-white btn btn-outline-secondary col-12 px-2\" id=\"link-btn-today\" type=\"button\" onClick={this.hideNavbar}>Today</Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <Link to=\"/tomorrow\" className=\"nav-link link-button text-white btn btn-outline-secondary col-12 px-2\" id=\"link-btn-tomorrow\" type=\"button\" onClick={this.hideNavbar}>Tomorrow</Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <Link to=\"/history\" className=\"nav-link link-button text-white btn btn-outline-secondary col-12 px-2\" id=\"link-btn-history\" type=\"button\" onClick={this.hideNavbar}>History</Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <Link to=\"/about\" className=\"nav-link link-button text-white btn btn-outline-secondary col-12 px-2\" id=\"link-btn-about\" type=\"button\" onClick={this.hideNavbar}>About</Link>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n","import Dexie from 'dexie';\r\n\r\nconst db = new Dexie('tasksDB');\r\n\r\ndb.version(1).stores({\r\n    tasks: '++id, name, date'\r\n});\r\n\r\nexport default db;","import db from './db'\r\n\r\nexport default class TasksDao {\r\n\r\n    static getInstance() {\r\n        return new TasksDao();\r\n    }\r\n\r\n    getAll() {\r\n        return db.tasks.toArray();\r\n    }\r\n\r\n    insert(task) {\r\n        return db.tasks.add(task);\r\n    }\r\n\r\n    update(task) {\r\n        return db.tasks.put(task);\r\n    }\r\n\r\n    delete(id) {\r\n        return db.tasks.delete(id);\r\n    }\r\n\r\n    getTodaysTasks() {\r\n        let today = new Date();\r\n        let startToday = new Date(today.getFullYear(), today.getMonth(), today.getDate());\r\n        let endToday = new Date(today.getFullYear(), today.getMonth(), today.getDate(), 23, 59, 59, 999);\r\n        return db.tasks.where('date').between(startToday, endToday, true, true).toArray();\r\n    }\r\n\r\n    getTomorrowsTasks() {\r\n        let today = new Date();\r\n        let startTomorrow = new Date(today.getFullYear(), today.getMonth(), today.getDate()+1);\r\n        let endTomorrow = new Date(today.getFullYear(), today.getMonth(), today.getDate()+1, 23, 59, 59, 999);\r\n        return db.tasks.where('date').between(startTomorrow, endTomorrow, true, true).toArray();\r\n    }\r\n\r\n    getOldTasks() {\r\n        let today = new Date();\r\n        let startToday = new Date(today.getFullYear(), today.getMonth(), today.getDate());\r\n        return db.tasks.where('date').below(startToday).reverse().toArray();\r\n    }\r\n\r\n    deleteOldTasks() {\r\n        let today = new Date();\r\n        let oneWeekAgo = new Date(today.getFullYear(), today.getMonth(), today.getDate()-7, 23, 59, 59, 999);\r\n        return db.tasks.where('date').below(oneWeekAgo).delete();\r\n    }\r\n\r\n    clearAllTasks() {\r\n        return db.tasks.clear();\r\n    }\r\n\r\n}\r\n\r\n","import React, { Component } from 'react'\r\nimport TasksDao from '../database/TasksDAO';\r\nimport Tippy from '@tippyjs/react';\r\nimport 'tippy.js/dist/tippy.css';\r\n\r\nexport default class TodaysTasks extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             todaysTasks: [],\r\n             newTaskName: \"\",\r\n             newTaskDesc: \"\",\r\n             taskToUpdate: {},\r\n             insertingTask: true,\r\n             search: \"\",\r\n             validTask: true\r\n        }\r\n    }\r\n\r\n    setButton = () => {\r\n        var btns = document.querySelectorAll(\".link-button\");\r\n        btns.forEach(function (btn){\r\n            if(btn.classList.contains(\"btn-secondary\")){\r\n                btn.classList.remove(\"btn-secondary\");\r\n                btn.classList.add(\"btn-outline-secondary\");\r\n            }\r\n        });\r\n        var btnHere = document.getElementById(\"link-btn-today\");\r\n        btnHere.classList.remove(\"btn-outline-secondary\");\r\n        btnHere.classList.add(\"btn-secondary\");\r\n    }\r\n\r\n    loadTodaysTasks = () => {\r\n        TasksDao.getInstance().getTodaysTasks()\r\n            .then( result => {\r\n                this.setState({todaysTasks: result});\r\n            });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadTodaysTasks();\r\n        this.setButton();\r\n    }\r\n\r\n    newTaskNameChange = (event) => {\r\n        this.setState({newTaskName: event.target.value})\r\n    }\r\n\r\n    newTaskDescChage = (event) => {\r\n        this.setState({newTaskDesc: event.target.value})\r\n    }\r\n\r\n    searchChange = (event) => {\r\n        this.setState({search: event.target.value})\r\n    }\r\n\r\n    addNewTask = () => {\r\n        this.setState({validTask: true});\r\n        let today = new Date();\r\n        let task = {name: this.state.newTaskName, desc: this.state.newTaskDesc, date: today, completed: false};\r\n        TasksDao.getInstance().insert(task)\r\n            .then( result => {\r\n                this.loadTodaysTasks();\r\n            });\r\n    }\r\n\r\n    editTask = () => {\r\n        this.setState({validTask: true});\r\n        let task = this.state.taskToUpdate;\r\n        task.name = this.state.newTaskName;\r\n        task.desc = this.state.newTaskDesc;\r\n        TasksDao.getInstance().update(task)\r\n            .then( result => {\r\n                this.loadTodaysTasks();\r\n            });\r\n    }\r\n\r\n    deleteTask = (id) => {\r\n        TasksDao.getInstance().delete(id)\r\n            .then( result => {\r\n                this.loadTodaysTasks();\r\n            });\r\n    }\r\n\r\n    toggleTaskCompletion = (task) => {\r\n        TasksDao.getInstance().update(task)\r\n            .then( result => {\r\n                this.loadTodaysTasks();\r\n            });\r\n    }\r\n\r\n    moveTaskToTomorrow = (task) => {\r\n        task.date = new Date(Date.now() + 1000*60*60*24);\r\n        TasksDao.getInstance().update(task)\r\n            .then( result => {\r\n                this.loadTodaysTasks();\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"row d-flex justify-content-center mt-5 pt-sm-4\">\r\n                <div className=\"my-2 col-md-10 p-2\">\r\n                    <h3 className=\"d-sm-none text-center\">Today's tasks</h3>\r\n                    <hr className=\"d-sm-none\"/>\r\n                    <div className=\"d-flex gap-2\">\r\n                        <div className=\"col-1\">\r\n                            <Tippy content=\"Add new task\">\r\n                                <button type=\"button\" className=\"btn btn-secondary\" onClick={() => this.setState({insertingTask: true, newTaskName: \"\", newTaskDesc: \"\", validTask: true})} data-bs-toggle=\"modal\" data-bs-target=\"#newTaskModal\"><i className=\"bi bi-plus-lg\"></i></button>\r\n                            </Tippy>\r\n                        </div>\r\n                        <div className=\"d-flex col-10 justify-content-center\">\r\n                            <div className=\"col-md-4 col-sm-6\">\r\n                                <input className=\"form-control bg-dark text-white\" type=\"text\" placeholder=\"Search\" aria-label=\"Search\" onChange={this.searchChange}/>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-1\"></div>\r\n                    </div>\r\n                    <hr />\r\n                    <div className=\"modal fade\" id=\"newTaskModal\" tabIndex=\"-1\" aria-labelledby=\"newTaskModalLabel\" aria-hidden=\"true\">\r\n                        <div className=\"modal-dialog\">\r\n                            <div className=\"modal-content bg-dark text-white\">\r\n                                <div className=\"modal-header\">\r\n                                    <h5 className=\"modal-title\" id=\"newTaskModalLabel\">{this.state.insertingTask ? \"New Task\" : \"Edit Task\"}</h5>\r\n                                    <button type=\"button\" className=\"btn-close btn-close-white\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n                                </div>\r\n                                <div className=\"modal-body\">\r\n                                    <form>\r\n                                        <div className=\"mb-3\">\r\n                                            <label htmlFor=\"task-name\" className=\"col-form-label\">Name:</label>\r\n                                            <input value={this.state.newTaskName} onChange={this.newTaskNameChange} type=\"text\" className=\"form-control bg-dark text-white\" id=\"task-name\" placeholder=\"Do something amazing!\"/>\r\n                                            {!this.state.validTask ? <label className=\"text-danger form-text\"> * Required</label> : <div></div>}\r\n                                        </div>\r\n                                        <div className=\"mb-3\">\r\n                                            <label htmlFor=\"description-text\" className=\"col-form-label\">Description:</label>\r\n                                            <textarea value={this.state.newTaskDesc} onChange={this.newTaskDescChage} className=\"form-control bg-dark text-white\" id=\"description-text\"></textarea>\r\n                                        </div>\r\n                                    </form>\r\n                                </div>\r\n                                <div className=\"modal-footer\">\r\n                                    <button type=\"button\" className=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\r\n                                    {this.state.newTaskName !== \"\" ?\r\n                                        <button type=\"button\" className=\"btn btn-success\" id=\"task-submit-button\" onClick={() => {this.state.insertingTask ? this.addNewTask() : this.editTask()}} data-bs-dismiss=\"modal\">{this.state.insertingTask ? \"Add\" : \"Save\"}</button>\r\n                                    :   <button type=\"button\" className=\"btn btn-success\" id=\"task-submit-button\" onClick={() => {this.setState({validTask: false})}}>{this.state.insertingTask ? \"Add\" : \"Save\"}</button>\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        {this.state.todaysTasks && this.state.todaysTasks.map( (task) => {\r\n                            if((task.name.toLowerCase().search(this.state.search.toLowerCase()) !== -1) || (task.desc.toLowerCase().search(this.state.search.toLowerCase()) !== -1)) {\r\n                                return <div key={task.id} className=\"col-md-4 col-sm-6 my-2\">\r\n                                    <div className=\"card text-white bg-dark border-secondary\">\r\n                                        <div className=\"card-body\">\r\n                                            <h5 className=\"card-title\">{task.name}</h5>\r\n                                            <p className=\"card-text\">{task.desc}</p>\r\n                                            <div className=\"d-flex\">\r\n                                                <div className=\"col\">\r\n                                                        {task.completed ? \r\n                                                        <Tippy content=\"Mark as not done\">\r\n                                                            <button className=\"btn btn-success btn-sm\" onClick={() => {task.completed = false; this.toggleTaskCompletion(task);}}><i className=\"bi bi-check-lg\"></i></button>\r\n                                                        </Tippy>\r\n                                                        : <Tippy content=\"Mark as done\">\r\n                                                            <button className=\"btn btn-outline-success btn-sm\" onClick={ () => {task.completed = true; this.toggleTaskCompletion(task);}}><i className=\"bi bi-check-lg\" style={{opacity: 0}}></i></button>\r\n                                                        </Tippy>\r\n                                                    }\r\n                                                </div>\r\n                                                <div className=\"d-flex flex-row gap-2 justify-content-end\">\r\n                                                    <Tippy content=\"Edit task\">\r\n                                                        <button className=\"btn btn-secondary btn-sm\" type=\"button\" onClick={() => {\r\n                                                                this.setState({taskToUpdate: task, newTaskName: task.name, newTaskDesc: task.desc, insertingTask: false});\r\n                                                            }} data-bs-toggle=\"modal\" data-bs-target=\"#newTaskModal\">\r\n                                                            <i className=\"bi bi-pencil-square\"></i>\r\n                                                        </button>\r\n                                                    </Tippy>\r\n                                                    <Tippy content=\"Do it tomorrow\">\r\n                                                        <button className=\"btn btn-secondary btn-sm\" type=\"button\" onClick={() => this.moveTaskToTomorrow(task)}><i className=\"bi bi-arrow-return-right\"></i></button>\r\n                                                    </Tippy>\r\n                                                    <Tippy content=\"Delete task\">\r\n                                                        <button className=\"btn btn-danger btn-sm\" type=\"button\" onClick={() => this.deleteTask(task.id)}><i className=\"bi bi-trash\"></i></button>\r\n                                                    </Tippy>\r\n                                                </div> \r\n                                            </div>   \r\n                                        </div>\r\n                                    </div>  \r\n                                </div>\r\n                            } else {\r\n                                return <div key={task.id}></div>\r\n                            }\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport TasksDao from '../database/TasksDAO';\r\nimport Tippy from '@tippyjs/react';\r\nimport 'tippy.js/dist/tippy.css';\r\n\r\nexport default class TomorrowsTasks extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             tomorrowsTasks: [],\r\n             newTaskName: \"\",\r\n             newTaskDesc: \"\",\r\n             taskToUpdate: {},\r\n             insertingTask: true,\r\n             search: \"\",\r\n             validTask: true\r\n        }\r\n    }\r\n\r\n    setButton = () => {\r\n        var btns = document.querySelectorAll(\".link-button\");\r\n        btns.forEach(function (btn){\r\n            if(btn.classList.contains(\"btn-secondary\")){\r\n                btn.classList.remove(\"btn-secondary\");\r\n                btn.classList.add(\"btn-outline-secondary\");\r\n            }\r\n        });\r\n        var btnHere = document.getElementById(\"link-btn-tomorrow\");\r\n        btnHere.classList.remove(\"btn-outline-secondary\");\r\n        btnHere.classList.add(\"btn-secondary\");\r\n    }\r\n\r\n    loadTomorrowsTasks = () => {\r\n        TasksDao.getInstance().getTomorrowsTasks()\r\n            .then( result => {\r\n                this.setState({tomorrowsTasks: result});\r\n            });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadTomorrowsTasks();\r\n        this.setButton();\r\n    }\r\n\r\n    newTaskNameChange = (event) => {\r\n        this.setState({newTaskName: event.target.value})\r\n    }\r\n\r\n    newTaskDescChage = (event) => {\r\n        this.setState({newTaskDesc: event.target.value})\r\n    }\r\n\r\n    searchChange = (event) => {\r\n        this.setState({search: event.target.value})\r\n    }\r\n\r\n    addNewTask = () => {\r\n        this.setState({validTask: true});\r\n        let tomorrow = new Date(Date.now() + 1000*60*60*24);\r\n        let task = {name: this.state.newTaskName, desc: this.state.newTaskDesc, date: tomorrow, completed: false};\r\n        TasksDao.getInstance().insert(task)\r\n            .then( result => {\r\n                this.loadTomorrowsTasks();\r\n            });\r\n    }\r\n\r\n    editTask = () => {\r\n        this.setState({validTask: true});\r\n        let task = this.state.taskToUpdate;\r\n        task.name = this.state.newTaskName;\r\n        task.desc = this.state.newTaskDesc;\r\n        TasksDao.getInstance().update(task)\r\n            .then( result => {\r\n                this.loadTomorrowsTasks();\r\n            });\r\n    }\r\n\r\n    deleteTask = (id) => {\r\n        TasksDao.getInstance().delete(id)\r\n            .then( result => {\r\n                this.loadTomorrowsTasks();\r\n            });\r\n    }\r\n\r\n    toggleTaskCompletion = (task) => {\r\n        TasksDao.getInstance().update(task)\r\n            .then( result => {\r\n                this.loadTomorrowsTasks();\r\n            });\r\n    }\r\n\r\n    moveTaskToToday = (task) => {\r\n        task.date = new Date();\r\n        TasksDao.getInstance().update(task)\r\n            .then( result => {\r\n                this.loadTomorrowsTasks();\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"row d-flex justify-content-center mt-5 pt-sm-4\">\r\n                <div className=\"my-2 col-md-10 p-2\">\r\n                    <h3 className=\"d-sm-none text-center\">Tomorrow's tasks</h3>\r\n                    <hr className=\"d-sm-none\"/>\r\n                    <div className=\"d-flex gap-2\">\r\n                        <div className=\"col-1\">\r\n                            <Tippy content=\"Add new task\">\r\n                                <button type=\"button\" className=\"btn btn-secondary\" onClick={() => this.setState({insertingTask: true, newTaskName: \"\", newTaskDesc: \"\", validTask: true})} data-bs-toggle=\"modal\" data-bs-target=\"#newTaskModal\"><i className=\"bi bi-plus-lg\"></i></button>\r\n                            </Tippy>\r\n                        </div>\r\n                        <div className=\"d-flex col-10 justify-content-center\">\r\n                            <div className=\"col-md-4 col-sm-6\">\r\n                                <input className=\"form-control bg-dark text-white\" type=\"text\" placeholder=\"Search\" aria-label=\"Search\" onChange={this.searchChange}/>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-1\"></div>\r\n                    </div>\r\n                    <hr />\r\n                    <div className=\"modal fade\" id=\"newTaskModal\" tabIndex=\"-1\" aria-labelledby=\"newTaskModalLabel\" aria-hidden=\"true\">\r\n                        <div className=\"modal-dialog\">\r\n                            <div className=\"modal-content bg-dark text-white\">\r\n                                <div className=\"modal-header\">\r\n                                    <h5 className=\"modal-title\" id=\"newTaskModalLabel\">{this.state.insertingTask ? \"New Task\" : \"Edit Task\"}</h5>\r\n                                    <button type=\"button\" className=\"btn-close btn-close-white\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n                                </div>\r\n                                <div className=\"modal-body\">\r\n                                    <form>\r\n                                        <div className=\"mb-3\">\r\n                                            <label htmlFor=\"task-name\" className=\"col-form-label\">Name:</label>\r\n                                            <input value={this.state.newTaskName} onChange={this.newTaskNameChange} type=\"text\" className=\"form-control bg-dark text-white\" id=\"task-name\" placeholder=\"Do something amazing!\"/>\r\n                                            {!this.state.validTask ? <label className=\"text-danger form-text\"> * Required</label> : <div></div>}\r\n                                        </div>\r\n                                        <div className=\"mb-3\">\r\n                                            <label htmlFor=\"description-text\" className=\"col-form-label\">Description:</label>\r\n                                            <textarea value={this.state.newTaskDesc} onChange={this.newTaskDescChage} className=\"form-control bg-dark text-white\" id=\"description-text\"></textarea>\r\n                                        </div>\r\n                                    </form>\r\n                                </div>\r\n                                <div className=\"modal-footer\">\r\n                                    <button type=\"button\" className=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\r\n                                    {this.state.newTaskName !== \"\" ?\r\n                                        <button type=\"button\" className=\"btn btn-success\" id=\"task-submit-button\" onClick={() => {this.state.insertingTask ? this.addNewTask() : this.editTask()}} data-bs-dismiss=\"modal\">{this.state.insertingTask ? \"Add\" : \"Save\"}</button>\r\n                                    :   <button type=\"button\" className=\"btn btn-success\" id=\"task-submit-button\" onClick={() => {this.setState({validTask: false})}}>{this.state.insertingTask ? \"Add\" : \"Save\"}</button>\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        {this.state.tomorrowsTasks && this.state.tomorrowsTasks.map( (task) => {\r\n                            if((task.name.toLowerCase().search(this.state.search.toLowerCase()) !== -1) || (task.desc.toLowerCase().search(this.state.search.toLowerCase()) !== -1)) {\r\n                                return <div key={task.id} className=\"col-md-4 col-sm-6 my-2\">\r\n                                    <div className=\"card text-white bg-dark border-secondary\">\r\n                                        <div className=\"card-body\">\r\n                                            <h5 className=\"card-title\">{task.name}</h5>\r\n                                            <p className=\"card-text\">{task.desc}</p>\r\n                                            <div className=\"d-flex\">\r\n                                                <div className=\"col\">\r\n                                                    {task.completed ? \r\n                                                        <Tippy content=\"Mark as not done\">\r\n                                                            <button className=\"btn btn-success btn-sm\" onClick={() => {task.completed = false; this.toggleTaskCompletion(task);}}><i className=\"bi bi-check-lg\"></i></button>\r\n                                                        </Tippy>\r\n                                                        : <Tippy content=\"Mark as done\">\r\n                                                            <button className=\"btn btn-outline-success btn-sm\" onClick={ () => {task.completed = true; this.toggleTaskCompletion(task);}}><i className=\"bi bi-check-lg\" style={{opacity: 0}}></i></button>\r\n                                                        </Tippy>\r\n                                                    }\r\n                                                </div>\r\n                                                <div className=\"d-flex flex-row gap-2 justify-content-end\">\r\n                                                    <Tippy content=\"Edit task\">\r\n                                                        <button className=\"btn btn-secondary btn-sm\" type=\"button\" onClick={() => {\r\n                                                                this.setState({taskToUpdate: task, newTaskName: task.name, newTaskDesc: task.desc, insertingTask: false});\r\n                                                            }} data-bs-toggle=\"modal\" data-bs-target=\"#newTaskModal\">\r\n                                                            <i className=\"bi bi-pencil-square\"></i>\r\n                                                        </button>\r\n                                                    </Tippy>\r\n                                                    <Tippy content=\"Do it today\">\r\n                                                        <button className=\"btn btn-secondary btn-sm\" type=\"button\" onClick={() => this.moveTaskToToday(task)}><i className=\"bi bi-arrow-return-left\"></i></button>\r\n                                                    </Tippy>\r\n                                                    <Tippy content=\"Delete task\">\r\n                                                        <button className=\"btn btn-danger btn-sm\" type=\"button\" onClick={() => this.deleteTask(task.id)}><i className=\"bi bi-trash\"></i></button>\r\n                                                    </Tippy>\r\n                                                </div> \r\n                                            </div>   \r\n                                        </div>\r\n                                    </div>  \r\n                                </div>\r\n                            } else {\r\n                                return <div key={task.id}></div>\r\n                            }\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class About extends Component {\r\n\r\n    setButton = () => {\r\n        var btns = document.querySelectorAll(\".link-button\");\r\n        btns.forEach(function (btn){\r\n            if(btn.classList.contains(\"btn-secondary\")){\r\n                btn.classList.remove(\"btn-secondary\");\r\n                btn.classList.add(\"btn-outline-secondary\");\r\n            }\r\n        });\r\n        var btnHere = document.getElementById(\"link-btn-about\");\r\n        btnHere.classList.remove(\"btn-outline-secondary\");\r\n        btnHere.classList.add(\"btn-secondary\");\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setButton();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"row d-flex justify-content-center mt-5 pt-sm-4\">\r\n                <div className=\"my-2 col-md-10 p-2\">\r\n                    <h1 id='simple-next-day-planner'>Simple Next Day Planner</h1>\r\n                    <p>Create and manage your daily tasks in a simple way.</p>\r\n                    <h2 id='quick-overview'>Quick Overview</h2>\r\n                    <p>There are two main to-do lists: Today and Tomorrow.</p>\r\n                    <p>In each one you can create, edit and delete your tasks.</p>\r\n                    <p>When the day changes, your tasks that were previously in the Tomorrow list, will be transferred to Today&#39;s list, leaving Tomorrow&#39;s list empty.</p>\r\n                    <p>You can also shift one task from today to tomorrow and vice-versa.</p>\r\n                    <p>Missed one task? No problem. In the History tab you can view your past tasks and if necessary transfer them to Today&#39;s or Tomorrow&#39;s list.</p>\r\n                    <h2 id='about-this-project'>About This Project</h2>\r\n                    <p>This project was created with the objective of learning and improving my skills with the listed technologies in the Credits section, mainly React and Dexie.js.</p>\r\n                    <p>After learning the basics of IndexedDB, Dexie.js proved to be a good and easy way to make better use of the IndexedDB.</p>\r\n                    <p>To create a simple prduct I'd like to use during everyday life, was also the idea in mind.</p>\r\n                    <h2 id='credits'>Credits</h2>\r\n                    <p>Simple Next Day Planner is created using:</p>\r\n                    <ul>\r\n                    <li><a  className=\"text-white\" href='https://github.com/facebook/create-react-app' target=\"_blank\" rel=\"noreferrer\">React</a></li>\r\n                    <li><a className=\"text-white\" href='https://github.com/remix-run/react-router' target=\"_blank\" rel=\"noreferrer\">React Router</a></li>\r\n                    <li><a className=\"text-white\" href='https://getbootstrap.com/' target=\"_blank\" rel=\"noreferrer\">Bootstrap and Bootstrap Icons</a></li>\r\n                    <li><a className=\"text-white\" href='https://github.com/dfahlander/Dexie.js' target=\"_blank\" rel=\"noreferrer\">Dexie.js</a></li>\r\n                    <li><a className=\"text-white\" href='https://github.com/atomiks/tippyjs' target=\"_blank\" rel=\"noreferrer\">Tippy.js</a></li>\r\n\r\n                    </ul>\r\n                    <h2 id='about-me'>About Me</h2>\r\n                    <p>You can find more about me and my other projects on my <a className=\"text-white\" href='https://github.com/kallyanschott' target=\"_blank\" rel=\"noreferrer\">GitHub</a> page.</p>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport TasksDao from '../database/TasksDAO';\r\nimport Tippy from '@tippyjs/react';\r\nimport 'tippy.js/dist/tippy.css';\r\n\r\nexport default class History extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             oldTasks: [],\r\n             taskToUpdate: {},\r\n             search: \"\"\r\n        }\r\n    }\r\n\r\n    setButton = () => {\r\n        var btns = document.querySelectorAll(\".link-button\");\r\n        btns.forEach(function (btn){\r\n            if(btn.classList.contains(\"btn-secondary\")){\r\n                btn.classList.remove(\"btn-secondary\");\r\n                btn.classList.add(\"btn-outline-secondary\");\r\n            }\r\n        });\r\n        var btnHere = document.getElementById(\"link-btn-history\");\r\n        btnHere.classList.remove(\"btn-outline-secondary\");\r\n        btnHere.classList.add(\"btn-secondary\");\r\n    }\r\n    \r\n    componentDidMount() {\r\n        this.loadOldTasks();\r\n        this.setButton();\r\n    }\r\n\r\n    loadOldTasks = () => {\r\n        TasksDao.getInstance().getOldTasks()\r\n            .then( result => {\r\n                this.setState({oldTasks: result});        \r\n            });\r\n    }\r\n\r\n    searchChange = (event) => {\r\n        this.setState({search: event.target.value})\r\n    }\r\n\r\n    moveTaskToToday = (task) => {\r\n        task.date = new Date();\r\n        TasksDao.getInstance().update(task)\r\n            .then( result => {\r\n                this.loadOldTasks();\r\n            });\r\n    }\r\n\r\n    moveTaskToTomorrow = (task) => {\r\n        task.date = new Date(Date.now() + 1000*60*60*24);\r\n        TasksDao.getInstance().update(task)\r\n            .then( result => {\r\n                this.loadOldTasks();\r\n            });\r\n    }\r\n\r\n    deleteTask = (id) => {\r\n        TasksDao.getInstance().delete(id)\r\n            .then( result => {\r\n                this.loadOldTasks();\r\n            });\r\n    }\r\n\r\n    toggleTaskCompletion = (task) => {\r\n        TasksDao.getInstance().update(task)\r\n            .then( result => {\r\n                this.loadOldTasks();\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"row d-flex justify-content-center mt-5 pt-sm-4\">\r\n                <div className=\"my-2 col-md-10 p-2\">\r\n                    <h3 className=\"d-sm-none text-center\">History</h3>\r\n                    <hr className=\"d-sm-none\"/>\r\n                    <div className=\"d-flex gap-2\">\r\n                        <div className=\"col-1\"></div>\r\n                        <div className=\"d-flex col-10 justify-content-center\">\r\n                            <div className=\"col-md-4 col-sm-6\">\r\n                                <input className=\"form-control bg-dark text-white\" type=\"text\" placeholder=\"Search\" aria-label=\"Search\" onChange={this.searchChange}/>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-1\"></div>\r\n                    </div>\r\n                    <hr />\r\n                    <table className=\"table text-white\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th scope=\"col\" className=\"col-2 col-sm-1 col-md-2 col-lg-1\">Done</th>\r\n                                <th scope=\"col\" >Name</th>\r\n                                <th scope=\"col\" >Description</th>\r\n                                <th scope=\"col\" className=\"col-3 col-lg-2\">Date</th>\r\n                                <th scope=\"col\" className=\"col-2 col-sm-1 col-md-2 col-lg-2\"></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody className=\"align-middle\">\r\n                            {this.state.oldTasks && this.state.oldTasks.map( (task) => {\r\n                                if((task.name.toLowerCase().search(this.state.search.toLowerCase()) !== -1) || (task.desc.toLowerCase().search(this.state.search.toLowerCase()) !== -1)) {\r\n                                    return <tr key={task.id}>\r\n                                        <td>\r\n                                            {task.completed ? \r\n                                                <Tippy content=\"Mark as not done\">\r\n                                                    <button className=\"btn btn-success btn-sm\" onClick={() => {task.completed = false; this.toggleTaskCompletion(task);}}><i className=\"bi bi-check-lg\"></i></button>\r\n                                                </Tippy>\r\n                                                : <Tippy content=\"Mark as done\">\r\n                                                    <button className=\"btn btn-outline-success btn-sm\" onClick={ () => {task.completed = true; this.toggleTaskCompletion(task);}}><i className=\"bi bi-check-lg\" style={{opacity: 0}}></i></button>\r\n                                                </Tippy>\r\n                                            }\r\n                                        </td>  \r\n                                        <td>{task.name}</td>  \r\n                                        <td>{task.desc}</td>  \r\n                                        <td>{task.date.toDateString()}</td>  \r\n                                        <td>\r\n                                            <div className=\"d-flex flex-column flex-lg-row gap-2\">\r\n                                                <Tippy content=\"Move to today\">\r\n                                                    <button className=\"btn btn-secondary btn-sm\" type=\"button\" onClick={() => this.moveTaskToToday(task)}><i className=\"bi bi-arrow-down\"></i></button>\r\n                                                </Tippy>\r\n                                                <Tippy content=\"Move to tomorrow\">\r\n                                                    <button className=\"btn btn-secondary btn-sm\" type=\"button\" onClick={() => this.moveTaskToTomorrow(task)}><i className=\"bi bi-arrow-return-right\"></i></button>\r\n                                                </Tippy>\r\n                                                <Tippy content=\"Delete task\">\r\n                                                    <button className=\"btn btn-danger btn-sm\" type=\"button\" onClick={() => this.deleteTask(task.id)}><i className=\"bi bi-trash\"></i></button>\r\n                                                </Tippy>\r\n                                            </div>\r\n                                        </td>  \r\n                                    </tr>\r\n                                } else {\r\n                                    return <div key={task.id}></div>\r\n                                }\r\n                            })}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\nimport Navigation from './navigation/Navigation';\nimport { HashRouter } from 'react-router-dom';\nimport { Route, Switch } from 'react-router';\nimport TodaysTasks from './tasks/TodaysTasks';\nimport TomorrowsTasks from './tasks/TomorrowsTasks';\nimport About from './about/About';\nimport History from './tasks/History'\n\nexport default class App extends Component {\n\n  render() {\n    return (\n      <HashRouter>\n        <div className=\"container-fluid\">\n          <Navigation />       \n          <Switch>\n            <Route exact path=\"/\">\n              <TodaysTasks />\n            </Route>\n            <Route exact path=\"/tomorrow\">\n              <TomorrowsTasks />\n            </Route>\n            <Route exact path=\"/history\">\n              <History />\n            </Route>\n            <Route exact path=\"/about\">\n              <About />\n            </Route>\n          </Switch>\n        </div>\n      </HashRouter>\n    )\n  }\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}